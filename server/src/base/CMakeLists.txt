cmake_minimum_required(VERSION 2.6)
PROJECT(Base)

AUX_SOURCE_DIRECTORY(./ SRC_LIST1)
AUX_SOURCE_DIRECTORY(./pb/protocol SRC_LIST2)
AUX_SOURCE_DIRECTORY(./jsoncpp SRC_LIST3)

if (APPLE)
    SET(PB_LIB_DIR ./pb/lib/mac)
elseif (UNIX)
    SET(PB_LIB_DIR ./pb/lib/linux)
elseif (MSVC)
    SET(PB_LIB_DIR ../slog ../lib)
endif ()

SET(LIBRARY_OUTPUT_PATH ./)
#SET(EXECUTABLE_OUTPUT_PATH  ./bin)
if (MSVC)
    SET(LIBRARY_OUTPUT_PATH ../lib)
    ADD_DEFINITIONS(-D_REENTRANT -D_FILE_OFFSET_BITS=64 -DAC_HAS_INFO
            -DAC_HAS_WARNING -DAC_HAS_ERROR -DAC_HAS_CRITICAL -DTIXML_USE_STL
            -DAC_HAS_DEBUG -DLINUX_DAEMON -D_HAS_STD_BYTE=0 /GL /Zc:auto /W1 /std:c++17)
else ()
    ADD_DEFINITIONS(-g -W -Wall -D_REENTRANT -D_FILE_OFFSET_BITS=64 -DAC_HAS_INFO
            -DAC_HAS_WARNING -DAC_HAS_ERROR -DAC_HAS_CRITICAL -DTIXML_USE_STL
            -DAC_HAS_DEBUG -DLINUX_DAEMON -std=c++17)
endif ()


INCLUDE_DIRECTORIES(./ ../ ./jsoncpp ./pb ./pb/protocol)
LINK_DIRECTORIES(./ ${PB_LIB_DIR} ./slog/lib)

ADD_LIBRARY(base ${SRC_LIST1} ${SRC_LIST2} ${SRC_LIST3})

#ADD_XXXX必须在TARGET_LINK_LIBRARIES前面，否则会报错
#ADD_LIBRARY(${PROJECTNAME} SHARED ${SRC_LIST})
#ADD_EXECUTABLE(${PROJECTNAME} ${SRC_LIST})
if (MSVC)
    message("PROJECT: ${CMAKE_GENERATOR}")
    TARGET_LINK_LIBRARIES(base slog debug pthreadVC3d optimized pthreadVC3 libcrypto)
else ()
    TARGET_LINK_LIBRARIES(base pthread slog crypto)
endif ()
