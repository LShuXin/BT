FROM centos:centos7.9.2009
WORKDIR /develop

RUN yum update -y &&\
    yum install -y bzip2 zip unzip ncurses-devel texinfo file libuuid-devel openssl-devel apr-devel apr-util-devel \
    curl-devel mariadb-devel mariadb-common openssl-devel wget tar cmake make gcc gcc-c++ flex diffutils \
    expat-devel autoconf automake libtool libnsl boost-devel

# RUN cd server/src && ./make_mysql.sh
COPY docker/develop_server/mysql-5.6.45.tar.gz ./
RUN tar -zxvf mysql-5.6.45.tar.gz && cd mysql-5.6.45 &&\
    cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DEXTRA_CHARSETS=all -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_READLINE=1 -DWITH_SSL=system -DWITH_ZLIB=system -DWITH_EMBEDDED_SERVER=1 -DENABLED_LOCAL_INFILE=1 &&\
    make -j4 && make install

# https://sourceforge.net/projects/mcrypt/files/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz
COPY docker/develop_server/libmcrypt-2.5.8.tar.gz ./
RUN tar -zxvf libmcrypt-2.5.8.tar.gz && cd libmcrypt-2.5.8 &&\
    ./configure &&\
    make -j4 && make install &&\
    ldconfig &&\
    cd libltdl &&\
    ./configure --enable-ltdl-install &&\
    make -j4 && make install

# 编译安装 mhash
# https://sourceforge.net/projects/mhash/files/latest/download/mhash-0.9.9.9.tar.gz
COPY docker/develop_server/mhash-0.9.9.9.tar.gz ./
RUN tar -xf mhash-0.9.9.9.tar.gz && cd mhash-0.9.9.9 &&\
    ./configure &&\
    make -j4 && make install

# 编译安装 termcap
# https://mirrors.sjtug.sjtu.edu.cn/gnu/termcap/termcap-1.3.1.tar.gz
COPY docker/develop_server/termcap-1.3.1.tar.gz ./
RUN tar -zxvf termcap-1.3.1.tar.gz && cd termcap-1.3.1 &&\
    ./configure --prefix=/usr &&\
    make -j4 && make install &&\
    cd .. && rm -rf termcap-1.3.1.tar.gz termcap-1.3.1

# 安装 gdb
COPY docker/develop_server/gdb-7.9.tar.gz ./
RUN tar -zxvf gdb-7.9.tar.gz && cd gdb-7.9 &&\
    ./configure --prefix=/usr &&\
    make -j4 && make install

# 升级 cmake
COPY docker/develop_server/cmake-3.27.1.tar.gz ./
RUN yum remove -y cmake &&\
    tar -zxvf cmake-3.27.1.tar.gz && cd cmake-3.27.1 &&\
    ./configure --prefix=/usr/local/cmake &&\
    gmake && gmake install &&\
    ln -s /usr/local/cmake/bin/cmake /usr/bin/cmake &&\
    echo "export CMAKE_HOME=/usr/local/cmake" >> /etc/profile &&\
    echo "export PATH=$PATH:/usr/local/cmake/bin" >> /etc/profile

# https://bigsearcher.com/mirrors/gcc/releases/gcc-11.2.0/gcc-11.2.0.tar.gz
COPY docker/develop_server/gcc-11.2.0.tar.gz ./
RUN tar -xf gcc-11.2.0.tar.gz && cd gcc-11.2.0 &&\
    ./contrib/download_prerequisites &&\
    ./configure --prefix=/usr -enable-checking=release -enable-languages=c,c++ -disable-multilib &&\
    make -j4 && make install

# RUN cd server/src && ./make_log4cxx.sh
COPY server/src/log4cxx log4cxx
# wget https://archive.apache.org/dist/logging/log4cxx/0.12.1/apache-log4cxx-0.12.1.tar.gz
COPY docker/develop_server/apache-log4cxx-0.12.1.tar.gz ./log4cxx/
RUN cd log4cxx && tar -xf apache-log4cxx-0.12.1.tar.gz && cd apache-log4cxx-0.12.1 &&\
    cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr/local/log4cxx . &&\
    cp -rf ../inputstreamreader.cpp ./src/main/cpp/ &&\
    cp -rf ../socketoutputstream.cpp ./src/main/cpp/ &&\
    cp -rf ../console.cpp ./src/examples/cpp/ &&\
    make -j4 && make install

# RUN cd server/src && ./make_protobuf.sh
COPY docker/develop_server/protobuf-3.18.0.tar.gz ./protobuf/
RUN cd protobuf && tar -xf protobuf-3.18.0.tar.gz && cd protobuf-3.18.0 &&\
    sh autogen.sh &&\
    ./configure --prefix=/usr/local/protobuf &&\
    make -j4 && make install &&\
    echo "export PROTOBUF_HOME=/usr/local/protobuf" >> /etc/profile &&\
    echo "export PATH=$PATH:/usr/local/protobuf/bin" >> /etc/profile

# RUN cd server/src && ./make_hiredis.sh
COPY docker/develop_server/hiredis-master.zip ./
RUN unzip hiredis-master.zip && cd hiredis-master &&\
    make && \
    mkdir -p /usr/local/hiredis &&\
    cp -a hiredis.h async.h read.h sds.h adapters libhiredis.a /usr/local/hiredis/

# 删除临时文件
RUN rm -rf /develop && yum clean all && rm -rf /var/cache/yum
    
CMD ["/bin/bash"]