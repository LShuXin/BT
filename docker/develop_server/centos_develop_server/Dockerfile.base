FROM centos:centos7.9.2009
WORKDIR /develop

RUN yum update -y &&\
    yum -y install bzip2 zip unzip ncurses-devel libuuid-devel openssl-devel apr-devel apr-util-devel \
    curl-devel mariadb-devel mariadb-common openssl-devel wget tar gdb.x86_64 \
    make gcc gcc-c++ flex diffutils expat-devel autoconf automake libtool libnsl

COPY docker/develop_server/cmake-3.27.1.tar.gz ./
RUN tar -zxvf cmake-3.27.1.tar.gz &&\
    cd cmake-3.27.1 &&\
    ./configure --prefix=/usr/local/cmake &&\
    gmake && gmake install &&\
    ln -s /usr/local/cmake/bin/cmake /usr/bin/cmake &&\
    echo "export CMAKE_HOME=/usr/local/cmake" >> /etc/profile &&\
    echo "export PATH=$PATH:$CMAKE_HOME/bin" >> /etc/profile &&\
    yum install -y boost-devel &&\
    yum clean all

# RUN wget https://github.com/gcc-mirror/gcc/archive/refs/tags/releases/gcc-8.5.0.tar.gz
COPY docker/develop_server/gcc-8.5.0.tar.gz ./
RUN tar -xf gcc-8.5.0.tar.gz
RUN cd gcc-releases-gcc-8.5.0 && ./contrib/download_prerequisites 
RUN cd gcc-releases-gcc-8.5.0 && ./configure --prefix=/usr -enable-checking=release -enable-languages=c,c++ -disable-multilib && make -j4 && make install

# RUN wget https://sourceforge.net/projects/mcrypt/files/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz
COPY docker/develop_server/libmcrypt-2.5.8.tar.gz ./
RUN tar zxvf libmcrypt-2.5.8.tar.gz
RUN cd libmcrypt-2.5.8 &&\
    ./configure &&\
    make -j4 && make install &&\
    ldconfig &&\
    cd libltdl &&\
    ./configure --enable-ltdl-install &&\
    make -j4 && make install

# 编译安装termcap
# RUN wget https://mirrors.sjtug.sjtu.edu.cn/gnu/termcap/termcap-1.3.1.tar.gz
COPY docker/develop_server/termcap-1.3.1.tar.gz ./
RUN tar -zxvf termcap-1.3.1.tar.gz
RUN cd termcap-1.3.1 && ./configure --prefix=/usr && make -j2 && make install

# 编译安装mhash
# RUN wget https://sourceforge.net/projects/mhash/files/latest/download/mhash-0.9.9.9.tar.gz
COPY docker/develop_server/mhash-0.9.9.9.tar.gz ./
RUN tar -zxvf mhash-0.9.9.9.tar.gz
RUN cd mhash-0.9.9.9 &&\
    ./configure &&\
    make -j2 && make install

COPY server/src/log4cxx log4cxx
# 编译依赖项
# RUN cd server/src && ./make_log4cxx.sh

COPY docker/develop_server/apache-log4cxx-0.12.1.tar.gz ./log4cxx/
RUN  cd log4cxx &&\
    # wget https://archive.apache.org/dist/logging/log4cxx/0.12.1/apache-log4cxx-0.12.1.tar.gz &&\
    tar -xf apache-log4cxx-0.12.1.tar.gz &&\
    cd apache-log4cxx-0.12.1 &&\
    cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr/local/log4cxx . &&\
    /bin/cp -rf ../inputstreamreader.cpp ./src/main/cpp/ &&\
    /bin/cp -rf ../socketoutputstream.cpp ./src/main/cpp/ &&\
    /bin/cp -rf ../console.cpp ./src/examples/cpp/ &&\
    make -j4 && make install

# RUN cd server/src && ./make_protobuf.sh
COPY docker/develop_server/protobuf-3.18.0.tar.gz ./protobuf/
RUN cd protobuf &&\
    # wget https://github.com/protocolbuffers/protobuf/archive/refs/tags/v3.18.0.tar.gz -O protobuf-3.18.0.tar.gz &&\
    tar -xf protobuf-3.18.0.tar.gz &&\
    cd protobuf-3.18.0 &&\
    sh autogen.sh &&\
    ./configure --prefix=/usr/local/protobuf &&\
    make -j4 && make install

# RUN cd server/src && ./make_hiredis.sh
COPY docker/develop_server/hiredis-master.zip ./hiredis/
RUN cd ./hiredis &&\
    unzip hiredis-master.zip &&\
    cd hiredis-master &&\
    make && \
    mkdir -p /usr/local/hiredis &&\
    /bin/cp -a hiredis.h async.h read.h sds.h adapters libhiredis.a /usr/local/hiredis/

COPY docker/develop_server/mysql-5.6.45.tar.gz ./mysql/
RUN cd ./mysql &&\
    tar -zxvf mysql-5.6.45.tar.gz && cd mysql-5.6.45 &&\
    cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DEXTRA_CHARSETS=all -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_READLINE=1 -DWITH_SSL=system -DWITH_ZLIB=system -DWITH_EMBEDDED_SERVER=1 -DENABLED_LOCAL_INFILE=1 &&\
    make -j2 && make install


# # 删除临时文件
RUN rm -Rf /develop && yum clean all
    
CMD ["/bin/bash"]