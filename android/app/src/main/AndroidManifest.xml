<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools" >
    <!-- https://developer.android.com/reference/android/Manifest.permission -->
    <uses-feature
        android:name="android.hardware.telephony"
        android:required="false" />

    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission
        android:name="android.permission.READ_EXTERNAL_STORAGE"
        android:maxSdkVersion="18" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission
        android:name="android.permission.INTERACT_ACROSS_USERS_FULL"
        tools:ignore="ProtectedPermissions" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.CALL_PHONE" />
    <uses-feature android:name="android.hardware.camera.any" />
    <uses-permission android:name="android.permission.CAMERA" />


    <!-- 授权应用程序读取设备的外部存储（如 SD 卡）上的文件， API 级别小于或等于 18 的设备上生效 -->
    <!-- 它允许应用程序在前台运行服务。前台服务是一种在用户可以察觉的情况下执行长时间运行任务的机制。这个权限允许应用程序将服务提升到前台，并且可以在状态栏上显示通知，以便用户知道应用程序正在运行。 -->
    <!-- 前台服务通常用于以下情况： -->
    <!-- 长时间运行任务： 如果您的应用程序需要执行长时间运行的任务，例如音乐播放、定位追踪、下载等，您可能需要使用前台服务，以便在任务执行期间将服务保持活动状态。 -->
    <!-- 与用户交互： 一些应用程序可能需要在后台运行时与用户进行交互，例如即时消息应用。前台服务允许您在状态栏中显示通知，以便用户可以随时与应用程序进行交互。 -->
    <!-- 保持活动状态： 前台服务可以帮助应用程序在设备处于休眠模式时保持活动状态，以便继续执行任务。 -->
    <!-- 需要注意的是，使用前台服务需要谨慎，因为这会消耗设备资源，包括电池寿命。当应用程序处于前台时，前台服务通常是合理的，但在应用程序转入后台时，应避免滥用前台服务，以免对用户造成不必要的影响。 -->
    <!-- 在清单文件（AndroidManifest.xml）中添加 FOREGROUND_SERVICE 权限声明，然后在代码中使用前台服务。同时，遵循最佳实践，确保提供适当的通知，使用户知道应用程序正在前台运行，并允许用户随时进行交互或停止服务。 -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" /> <!-- 声明应用程序支持的屏幕尺寸配置。这些配置告诉系统应该如何在不同类型和尺寸的屏幕上显示您的应用程序。以下是每个属性的含义： -->
    <!-- android:anyDensity="true"：表示应用程序支持所有屏幕密度，这意味着系统会自动适配不同的屏幕密度。 -->
    <!-- android:largeScreens="true"：表示应用程序支持较大的屏幕尺寸，如平板电脑等。 -->
    <!-- android:normalScreens="true"：表示应用程序支持一般尺寸的屏幕，这是大多数智能手机的屏幕尺寸。 -->
    <!-- android:resizeable="true"：表示应用程序可以自由调整大小，以适应不同尺寸的屏幕。 -->
    <!-- android:smallScreens="true"：表示应用程序支持较小的屏幕尺寸，如小型智能手机。 -->
    <!-- 这些属性的设置可以影响您的应用程序在不同类型的设备上的显示效果。例如，通过将 android:largeScreens 设置为 true，您的应用程序将会适应较大的平板电脑屏幕。 -->
    <!-- 需要注意的是，尽管您可以声明应用程序支持多种屏幕尺寸和密度，但您仍然需要确保应用程序的布局和资源在不同类型的屏幕上正常显示和适配。在设计和开发应用程序时，建议使用适当的布局和资源文件，以确保在各种屏幕上提供一致的用户体验。 -->
    <!-- 同时，您还可以使用其他配置项来更精细地控制您的应用程序在不同屏幕上的显示方式，例如限制特定屏幕尺寸的支持，或者针对不同屏幕密度提供不同的资源。 -->
    <supports-screens
        android:anyDensity="true"
        android:largeScreens="true"
        android:normalScreens="true"
        android:resizeable="true"
        android:smallScreens="true" />

    <application
        android:name=".app.BTApplication"
        android:icon="@drawable/image_logo_96x96"
        android:label="@string/app_name"
        android:largeHeap="true"
        android:supportsRtl="true"
        android:networkSecurityConfig="@xml/network_security_config"
        android:theme="@style/Theme.AppCompat.Light.NoActionBar.FullScreen" >
        <activity
            android:name=".ui.activity.ImageCapturePreviewActivity"
            android:exported="false"
            android:label="@string/title_activity_image_capture_preview"
            android:theme="@style/Theme.AppCompat.Light.NoActionBar.FullScreen" />
        <!-- 告知 XXPermissions 当前项目已经适配了分区存储特性 -->
        <meta-data
            android:name="ScopedStorage"
            android:value="true" />

        <activity
            android:name=".ui.activity.MessageActivity"
            android:configChanges="orientation|keyboardHidden"
            android:label="@string/app_name"
            android:launchMode="singleTask" >
        </activity>
        <activity
            android:name=".ui.activity.LoginActivity"
            android:configChanges="orientation|keyboardHidden"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".ui.activity.ContactFragmentActivity"
            android:configChanges="orientation|keyboardHidden"
            android:label="@string/contact_name" >
        </activity>
        <activity
            android:name=".ui.activity.MainActivity"
            android:configChanges="orientation|keyboardHidden"
            android:launchMode="singleTask" >
        </activity> <!-- android:exported="false"：这个属性指定了服务是否可以被其他应用程序组件（如其他应用的 Activity）访问 -->
        <service
            android:name=".service.service.IMService"
            android:exported="false" >
        </service>
        <service android:name=".service.service.LoadImageService" />

        <activity
            android:name=".ui.activity.ImagePickerActivity"
            android:configChanges="orientation|keyboardHidden"
            android:theme="@android:style/Theme.NoTitleBar" >
        </activity>
        <activity
            android:name=".ui.activity.ImageGridActivity"
            android:configChanges="orientation|keyboardHidden"
            android:theme="@android:style/Theme.NoTitleBar" >
        </activity>
        <activity
            android:name=".ui.activity.PreviewActivity"
            android:configChanges="orientation|keyboardHidden"
            android:theme="@android:style/Theme.NoTitleBar" >
        </activity>
        <activity
            android:name=".ui.activity.PreviewTextActivity"
            android:theme="@android:style/Theme.NoTitleBar" >
        </activity>
        <activity
            android:name=".ui.activity.PreviewGifActivity"
            android:theme="@android:style/Theme.NoTitleBar" >
        </activity>
        <activity
            android:name=".ui.activity.UserInfoActivity"
            android:theme="@android:style/Theme.NoTitleBar" >
        </activity>
        <activity
            android:name=".ui.activity.GroupManagementActivity"
            android:theme="@android:style/Theme.NoTitleBar" >
        </activity> <!-- android:windowSoftInputMode="adjustNothing" -->
        <!-- 当软键盘弹出时，不会对界面布局进行任何调整。换句话说，界 -->
        <!-- 面的内容不会被移动或调整以适应软键盘的出现。这可能会导致软键盘覆盖部分界面内容 -->
        <activity
            android:name=".ui.activity.GroupMemberSelectActivity"
            android:theme="@android:style/Theme.NoTitleBar"
            android:windowSoftInputMode="adjustNothing" >
        </activity>
        <activity
            android:name=".ui.activity.SettingActivity"
            android:theme="@android:style/Theme.NoTitleBar" >
        </activity>
        <activity
            android:name=".ui.activity.SearchActivity"
            android:theme="@android:style/Theme.NoTitleBar" >
        </activity>
        <activity
            android:name=".ui.activity.WebViewFragmentActivity"
            android:theme="@android:style/Theme.NoTitleBar" >
            <intent-filter>
                <category android:name="android.intent.category.DEFAULT" />

                <action android:name="android.intent.action.VIEW" />

                <data android:scheme="com.lsx.bigtalk" />
            </intent-filter>
        </activity>
        <activity
            android:name=".ui.activity.ImagePreviewActivity"
            android:theme="@android:style/Theme.NoTitleBar" />
        <activity android:name=".ui.activity.PreviewMessageImagesActivity" />

        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="com.your.package.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>
    </application>

</manifest>